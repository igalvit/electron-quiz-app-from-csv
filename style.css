/* 
   ================================================
   Global Styles and Base Layout
   ================================================
*/

/* 
   Base styles for a modern, clean look.
   - Sets the global font family to "Roboto".
   - Applies a light gray background.
   - Resets default margin and padding.
   - Uses flexbox to stack content vertically and center it horizontally.
*/
body {
  font-family: "Roboto", sans-serif; /* Use the Roboto font */
  background: #f4f6f9;                /* Light gray background */
  margin: 0;                         /* Remove default margin */
  padding: 0;                        /* Remove default padding */
  display: flex;                     /* Enable flexbox layout */
  flex-direction: column;            /* Stack children vertically */
  align-items: center;               /* Center children horizontally */
  color: #333;                       /* Dark gray text color */
}

/* 
   Container for the quiz content.
   - Limits the maximum width to 800px.
   - Uses 90% of the available width.
   - Centers itself horizontally using auto margins.
   - Adds padding, a white background, a subtle box-shadow, and rounded corners.
*/
.container {
  max-width: 800px;
  width: 90%;
  margin: 20px auto;
  padding: 20px;
  background: #ffffff;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  border-radius: 8px;
}

/* 
   Center headings.
   - Ensures that all h2 elements are centered.
*/
h2 {
  text-align: center;
}

/* 
   Combined counter container.
   - Centers the text.
   - Sets the font size and color.
   - Adds vertical margin.
*/
#counterContainer {
  text-align: center;
  font-size: 1.2rem;
  color: #555;
  margin: 10px 0;
}

/* 
   Optional counter and score styling.
   - Centers the counter.
   - Sets font size and color for both counter and score.
*/
#counter {
  text-align: center;
  font-size: 1.2rem;
  color: #555;
}

#score {
  text-align: right;
  font-size: 1.2rem;
  color: #555;
}

/* 
   ================================================
   Control Container for Navigation and File Controls
   ================================================
*/

/* 
   Control container for navigation and file controls.
   - Uses flexbox to display elements (Previous button, Group Filter listbox, 
     Select CSV File button, and Next button) in one horizontal row.
   - Centers items both horizontally and vertically.
   - Adds a gap between elements and a top margin.
*/
#controlContainer {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 20px;
  margin-top: 20px;
}

/* 
   Styling for buttons within the control container.
   - Provides consistent padding, font size, border radius, and a smooth background-color transition.
*/
#controlContainer button {
  padding: 12px 20px;
  font-size: 1rem;
  border: none;
  border-radius: 6px;
  cursor: pointer;
  transition: background-color 0.3s ease;
}

/* 
   Specific styles for the "Previous" button.
   - Dark gray background with white text.
   - Changes to a slightly darker gray on hover.
*/
#prevBtn {
  background-color: #6c757d;
  color: #fff;
}
#prevBtn:hover {
  background-color: #5a6268;
}

/* 
   Specific styles for the "Select CSV File" button.
   - Blue background with white text.
   - Changes to a darker blue on hover.
*/
#selectCsvBtn {
  background-color: #007bff;
  color: #fff;
}
#selectCsvBtn:hover {
  background-color: #0056b3;
}

/* 
   Styling for the group filter listbox (<select> element).
   - Applies padding, font size, border, and background color.
   - Uses a transition effect for the border color on focus.
*/
#groupSelect {
  padding: 12px 15px;
  font-size: 1rem;
  border: 1px solid #ced4da;
  border-radius: 6px;
  background-color: #e9ecef;
  color: #333;
  outline: none;
  transition: border-color 0.3s ease;
}
#groupSelect:focus {
  border-color: #007bff;
}

/* 
   Specific styles for the "Next" button.
   - Uses a green background with white text.
   - The 'order: 99' rule forces it to always appear as the last element in the flex container.
   - Changes to a darker green on hover.
*/
#nextBtn {
  background-color: #28a745;
  color: #fff;
  order: 99;
}
#nextBtn:hover {
  background-color: #218838;
}

/* 
   ================================================
   Answer Option Buttons
   ================================================
*/

/* 
   Styles for the answer option buttons.
   - Makes each button a block-level element that takes 100% width.
   - Adds margin, padding, a light background, rounded corners, and a smooth hover effect.
   - Buttons stack vertically.
*/
.option-button {
  display: block;
  width: 100%;
  margin: 10px 0;
  padding: 12px;
  background-color: #e9ecef;
  border: none;
  border-radius: 6px;
  font-size: 1rem;
  cursor: pointer;
  transition: background-color 0.3s ease;
}
.option-button:hover:not(:disabled) {
  background-color: #ced4da;
}

/* 
   ================================================
   Floating Feedback Message Styling (Centered)
   ================================================
*/

/* 
   Floating feedback message.
   - Positioned fixed at the top center of the viewport.
   - Uses a combination of left: 50% and transform to center it horizontally.
   - Initially hidden (opacity 0) and positioned slightly above (translateY(-20px)).
   - Has a smooth transition for opacity and transform.
   - High z-index ensures it appears above other content.
*/
.floating-feedback {
  position: fixed;
  top: 20px;
  left: 50%;
  padding: 12px 20px;
  border-radius: 6px;
  color: #fff;
  font-size: 1rem;
  opacity: 0;
  transition: opacity 0.5s ease, transform 0.5s ease;
  z-index: 1000;
  /* Center horizontally by shifting left by 50% of its own width; move upward initially */
  transform: translate(-50%, -20px);
}

/* 
   When the "show" class is added to the floating feedback message,
   it becomes fully opaque and moves into its final centered position.
*/
.floating-feedback.show {
  opacity: 1;
  transform: translate(-50%, 0);
}

/* 
   ================================================
   Scorer UI Card Styles
   ================================================
*/

/* 
   Card-style container for the scorer UI.
   - Flexbox layout for horizontal alignment of score sections.
   - Light background, rounded corners, and subtle shadow for a card-like appearance.
   - Responsive design adjustments for smaller screens.
*/
.score-card {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 32px;
  background: #f8fafc;
  border-radius: 12px;
  box-shadow: 0 2px 8px rgba(0,0,0,0.07);
  padding: 18px 32px;
  margin: 18px auto 24px auto;
  max-width: 600px;
  font-size: 1.1rem;
}

/* 
   Individual score section within the score card.
   - Stacks label and value vertically.
   - Centers content and ensures a minimum width for consistency.
*/
.score-section {
  display: flex;
  flex-direction: column;
  align-items: center;
  min-width: 80px;
}

/* 
   Label for score metrics (e.g., Correct, Incorrect).
   - Smaller font size, muted color, and slight letter spacing for a subtle appearance.
*/
.score-label {
  font-size: 0.95rem;
  color: #888;
  margin-bottom: 4px;
  letter-spacing: 0.5px;
}

/* 
   Value display for scores.
   - Larger font size, bold weight, and distinct color for emphasis.
   - Light background with rounded padding for a pill-like appearance.
*/
.score-value {
  font-size: 1.5rem;
  font-weight: 700;
  color: #222;
  background: #e9ecef;
  border-radius: 6px;
  padding: 2px 12px;
  min-width: 36px;
  text-align: center;
}

/* 
   Highlighted styles for correct and incorrect scores.
   - Uses green shades for correct scores and red shades for incorrect scores.
*/
.correct-score {
  color: #28a745;
  background: #e6f9ed;
}
.incorrect-score {
  color: #dc3545;
  background: #fae6e8;
}

/* 
   Responsive adjustments for the score card on smaller screens.
   - Stacks score sections vertically and reduces padding.
   - Ensures text remains readable and elements are not cramped.
*/
@media (max-width: 600px) {
  .score-card {
    flex-direction: column;
    gap: 10px;
    padding: 12px 8px;
  }
  .score-section {
    min-width: 0;
  }
  .score-value {
    font-size: 1.1rem;
    padding: 2px 8px;
  }
}

/* 
   Responsive adjustments:
   - For screens with a maximum width of 600px, adjust container margins and padding.
   - Reduce padding and font size for buttons and select elements within the control container.
*/
@media (max-width: 600px) {
  .container {
    margin: 10px;
    padding: 15px;
  }
  #controlContainer button,
  #controlContainer select {
    padding: 10px;
    font-size: 0.9rem;
  }
}

/* 
   ================================================
   Timer Display Styles
   ================================================
*/

/* 
   Styles for the timer display above the quiz.
   - Flexbox layout for centering content.
   - Modern font styling and colors.
   - Light background with rounded corners and subtle shadow.
   - Responsive adjustments for smaller screens.
*/
.timer-container {
  display: flex;
  justify-content: center;
  align-items: center;
  font-size: 1.2rem;
  color: #444;
  background: #f8fafc;
  border-radius: 8px;
  box-shadow: 0 2px 8px rgba(0,0,0,0.07);
  padding: 10px 24px;
  margin: 18px auto 12px auto;
  max-width: 300px;
  font-weight: 500;
}

/* 
   Label styles within the timer display.
   - Slightly smaller font size and muted color.
*/
.timer-label {
  margin-right: 8px;
  color: #888;
  font-size: 1rem;
}

/* 
   Value styles within the timer display.
   - Monospace font for a digital clock effect.
   - Larger font size and primary color for emphasis.
   - Letter spacing for a more spaced-out appearance.
*/
.timer-value {
  font-family: 'Roboto Mono', monospace;
  font-size: 1.3rem;
  color: #007bff;
  letter-spacing: 1px;
}

/* 
   Responsive adjustments for the timer display on smaller screens.
   - Reduces font size and padding for compactness.
*/
@media (max-width: 600px) {
  .timer-container {
    font-size: 1rem;
    padding: 6px 10px;
  }
  .timer-value {
    font-size: 1.1rem;
  }
}
